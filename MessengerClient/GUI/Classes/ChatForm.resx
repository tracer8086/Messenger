<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>